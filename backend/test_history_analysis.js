const aiService = require('./src/services/aiService');

async function testHistoryAnalysis() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ö–æ–¥–∞ AI...\n');
  
  // –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–∏—Ç—É–∞—Ü–∏—é –≥–¥–µ AI —Å–¥–µ–ª–∞–ª –ø–ª–æ—Ö–æ–π —Ö–æ–¥ –≤ –ø—Ä–æ—à–ª–æ–º
  const gameState = {
    fen: 'rnbqkb1r/pppp1ppp/5n2/4p3/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 3',
    strategy: '–ë—ã—Å—Ç—Ä–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ —Ñ–∏–≥—É—Ä, –∫–æ–Ω—Ç—Ä–æ–ª—å —Ü–µ–Ω—Ç—Ä–∞',
    apiKey: process.env.GOOGLE_API_KEY,
    model: 'gemini-2.5-flash-preview-04-17-thinking',
    aiSide: 'black',
    lastAiMove: {
      move: 'g8f6',
      san: 'Nf6',
      reasoning: '–Ø —Ä–∞–∑–≤–∏–≤–∞—é –∫–æ–Ω—è –Ω–∞ f6 –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è —Ü–µ–Ω—Ç—Ä–∞. –≠—Ç–æ —Ö–æ—Ä–æ—à–µ–µ —Ä–∞–∑–≤–∏–≤–∞—é—â–µ–µ –ø–æ–ª–µ –¥–ª—è –∫–æ–Ω—è.'
    }
  };
  
  console.log('üìã –¢–µ—Å—Ç–æ–≤–∞—è —Å–∏—Ç—É–∞—Ü–∏—è:');
  console.log('- –¢–µ–∫—É—â–∞—è –ø–æ–∑–∏—Ü–∏—è:', gameState.fen);
  console.log('- –ü—Ä–æ—à–ª—ã–π —Ö–æ–¥ AI:', gameState.lastAiMove.move, '(' + gameState.lastAiMove.san + ')');
  console.log('- –ü—Ä–æ—à–ª–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ:', gameState.lastAiMove.reasoning);
  console.log('- –ü—Ä–æ–±–ª–µ–º–∞: –ö–æ–Ω—å –Ω–∞ f6 –º–æ–∂–µ—Ç –±—ã—Ç—å –∞—Ç–∞–∫–æ–≤–∞–Ω –ø–µ—à–∫–æ–π e5!\n');
  
  try {
    const result = await aiService.getAiMove(gameState);
    
    console.log('ü§ñ –û—Ç–≤–µ—Ç AI:');
    console.log('–ù–æ–≤—ã–π —Ö–æ–¥:', result.move);
    
    if (result.lastMoveAnalysis) {
      console.log('\nüîç –ê–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ö–æ–¥–∞:');
      console.log(result.lastMoveAnalysis);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–∏–∑–Ω–∞–ª –ª–∏ AI —Å–≤–æ—é –æ—à–∏–±–∫—É
      const analysisLower = result.lastMoveAnalysis.toLowerCase();
      if (analysisLower.includes('–æ—à–∏–±–∫–∞') || 
          analysisLower.includes('–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω') || 
          analysisLower.includes('–ø–æ–¥ –∞—Ç–∞–∫') ||
          analysisLower.includes('–æ–ø–∞—Å–Ω')) {
        console.log('\n‚úÖ –û–¢–õ–ò–ß–ù–û! AI –ø—Ä–∏–∑–Ω–∞–ª —Å–≤–æ—é –æ—à–∏–±–∫—É –≤ –ø—Ä–æ—à–ª–æ–º —Ö–æ–¥–µ');
      } else {
        console.log('\n‚ùå AI –Ω–µ –ø—Ä–∏–∑–Ω–∞–ª –æ—à–∏–±–∫—É –≤ –ø—Ä–æ—à–ª–æ–º —Ö–æ–¥–µ');
      }
    } else {
      console.log('\n‚ùå AI –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ö–æ–¥–∞');
    }
    
    console.log('\n‚öîÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç–æ–≤:');
    console.log(result.mateCheck || '–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ç–∞–∫:');
    console.log(result.attackCheck || '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ç–∞–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
    
    console.log('\nüí≠ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ö–æ–¥–∞:');
    console.log(result.reasoning);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

testHistoryAnalysis(); 