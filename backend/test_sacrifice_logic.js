const aiService = require('./src/services/aiService');

async function testSacrificeLogic() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–≥–∏–∫–∏ –∂–µ—Ä—Ç–≤ AI...\n');
  
  // –ü–æ–∑–∏—Ü–∏—è –≥–¥–µ AI –º–æ–∂–µ—Ç –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å —Ñ–∏–≥—É—Ä—É –∑–∞ –º–∞—Ç
  const mateTestState = {
    fen: 'r1bqk2r/pppp1ppp/2n2n2/2b1p3/2B1P3/3P1N2/PPP2PPP/RNBQK2R w KQkq - 0 6',
    strategy: '–ê—Ç–∞–∫–∞ –Ω–∞ –∫–æ—Ä–æ–ª—è, –∏—â—É –º–∞—Ç',
    apiKey: process.env.GOOGLE_API_KEY || 'test-key',
    model: 'gemini-2.5-flash-preview-04-17-thinking',
    aiSide: 'white'
  };
  
  console.log('üìã –¢–µ—Å—Ç 1: –ü–æ–∑–∏—Ü–∏—è —Å –≤–æ–∑–º–æ–∂–Ω—ã–º –º–∞—Ç–æ–º');
  console.log('- FEN:', mateTestState.fen);
  console.log('- AI –∏–≥—Ä–∞–µ—Ç –∑–∞ –±–µ–ª—ã—Ö');
  console.log('- –¶–µ–ª—å: –Ω–∞–π—Ç–∏ –º–∞—Ç –∏–ª–∏ —Å–∏–ª—å–Ω—É—é –∞—Ç–∞–∫—É\n');
  
  try {
    const result = await aiService.getAiMove(mateTestState);
    
    console.log('ü§ñ –†–µ–∑—É–ª—å—Ç–∞—Ç AI:');
    console.log('–•–æ–¥:', result.move);
    
    if (result.mateCheck) {
      console.log('\n‚öîÔ∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ç–æ–≤:');
      console.log(result.mateCheck);
      
      if (result.mateCheck.toLowerCase().includes('–º–∞—Ç')) {
        console.log('‚úÖ –û–¢–õ–ò–ß–ù–û! AI –Ω–∞—à–µ–ª –º–∞—Ç');
      } else {
        console.log('‚ö†Ô∏è AI –Ω–µ –Ω–∞—à–µ–ª –º–∞—Ç–∞');
      }
    }
    
    console.log('\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ç–∞–∫:');
    console.log(result.attackCheck);
    
    console.log('\nüí≠ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:');
    console.log(result.reasoning);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–ø—Ä–∞–≤–¥–∞–ª –ª–∏ AI –∂–µ—Ä—Ç–≤—É
    const reasoningLower = result.reasoning.toLowerCase();
    if (reasoningLower.includes('–∂–µ—Ä—Ç–≤') || 
        reasoningLower.includes('–∫–æ–º–ø–µ–Ω—Å–∞—Ü') || 
        reasoningLower.includes('–º–∞—Ç')) {
      console.log('\n‚úÖ AI –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ–±—ä—è—Å–Ω–∏–ª —Ç–∞–∫—Ç–∏—á–µ—Å–∫—É—é –∏–¥–µ—é');
    } else {
      console.log('\n‚ö†Ô∏è AI –Ω–µ –æ–±—ä—è—Å–Ω–∏–ª —Ç–∞–∫—Ç–∏–∫—É');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
  
  console.log('\n' + '='.repeat(50) + '\n');
  
  // –¢–µ—Å—Ç 2: –ü–æ–∑–∏—Ü–∏—è –≥–¥–µ –ù–ï –Ω—É–∂–Ω–æ –∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å
  const safeTestState = {
    fen: 'rnbqkbnr/pppppppp/8/8/4P3/8/PPPP1PPP/RNBQKBNR b KQkq e3 0 1',
    strategy: '–°–ø–æ–∫–æ–π–Ω–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ',
    apiKey: process.env.GOOGLE_API_KEY || 'test-key',
    model: 'gemini-2.5-flash-preview-04-17-thinking',
    aiSide: 'black'
  };
  
  console.log('üìã –¢–µ—Å—Ç 2: –û–±—ã—á–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è');
  console.log('- FEN:', safeTestState.fen);
  console.log('- AI –∏–≥—Ä–∞–µ—Ç –∑–∞ —á–µ—Ä–Ω—ã—Ö');
  console.log('- –¶–µ–ª—å: –ù–ï –∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å —Ñ–∏–≥—É—Ä—ã –±–µ–∑ –ø—Ä–∏—á–∏–Ω—ã\n');
  
  try {
    const result = await aiService.getAiMove(safeTestState);
    
    console.log('ü§ñ –†–µ–∑—É–ª—å—Ç–∞—Ç AI:');
    console.log('–•–æ–¥:', result.move);
    
    console.log('\nüí≠ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:');
    console.log(result.reasoning);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ AI –Ω–µ –¥–µ–ª–∞–µ—Ç –≥–ª—É–ø—ã—Ö –∂–µ—Ä—Ç–≤
    const reasoningLower = result.reasoning.toLowerCase();
    if (reasoningLower.includes('–±–µ–∑–æ–ø–∞—Å–Ω') || 
        reasoningLower.includes('—Ä–∞–∑–≤–∏—Ç') || 
        reasoningLower.includes('–∫–æ–Ω—Ç—Ä–æ–ª')) {
      console.log('\n‚úÖ AI –∏–≥—Ä–∞–µ—Ç —Ä–∞–∑—É–º–Ω–æ –±–µ–∑ –Ω–µ–Ω—É–∂–Ω—ã—Ö –∂–µ—Ä—Ç–≤');
    } else if (reasoningLower.includes('–∂–µ—Ä—Ç–≤') || 
               reasoningLower.includes('–∞—Ç–∞–∫')) {
      console.log('\n‚ö†Ô∏è AI –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∏—à–∫–æ–º –∞–≥—Ä–µ—Å—Å–∏–≤–Ω—ã–º');
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å API –∫–ª—é—á
if (process.env.GOOGLE_API_KEY) {
  testSacrificeLogic();
} else {
  console.log('‚ö†Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ GOOGLE_API_KEY –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–∞');
  console.log('–ü—Ä–∏–º–µ—Ä: set GOOGLE_API_KEY=your_key && node test_sacrifice_logic.js');
} 