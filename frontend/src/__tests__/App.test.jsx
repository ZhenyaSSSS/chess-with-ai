import { render, screen, fireEvent, waitFor } from '@testing-library/react'
import '@testing-library/jest-dom'
import App from '../App'

// –ú–æ–∫–∞–µ–º API —Å–µ—Ä–≤–∏—Å
jest.mock('../services/apiService', () => ({
  getAiMove: jest.fn()
}));

import { getAiMove } from '../services/apiService'

describe('App Component', () => {
  beforeEach(() => {
    jest.clearAllMocks();
  });

  it('–¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ API –∫–ª—é—á–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ', () => {
    render(<App />);
    
    expect(screen.getByText('API –∫–ª—é—á Gemini')).toBeInTheDocument();
    expect(screen.getByText('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á Google Gemini –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã')).toBeInTheDocument();
  });

  it('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è', () => {
    render(<App />);
    
    expect(screen.getByText('üéØ –®–∞—Ö–º–∞—Ç—ã —Å AI')).toBeInTheDocument();
    expect(screen.getByText('–°—Ä–∞–∑–∏—Ç–µ—Å—å —Å —É–º–Ω—ã–º –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–º –Ω–∞ –±–∞–∑–µ Google Gemini')).toBeInTheDocument();
  });

  it('–¥–æ–ª–∂–µ–Ω –∑–∞–∫—Ä—ã–≤–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ API –∫–ª—é—á–∞', async () => {
    render(<App />);
    
    // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª–µ –≤–≤–æ–¥–∞ API –∫–ª—é—á–∞
    const apiKeyInput = screen.getByPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á...');
    const submitButton = screen.getByText('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É');
    
    // –í–≤–æ–¥–∏–º API –∫–ª—é—á
    fireEvent.change(apiKeyInput, { target: { value: 'AIzaSyTest-api-key-123456789' } });
    fireEvent.click(submitButton);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã–ª–æ—Å—å
    await waitFor(() => {
      expect(screen.queryByText('API –∫–ª—é—á Gemini')).not.toBeInTheDocument();
    });
  });

  it('–¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —à–∞—Ö–º–∞—Ç–Ω—É—é –¥–æ—Å–∫—É –ø–æ—Å–ª–µ –≤–≤–æ–¥–∞ API –∫–ª—é—á–∞', async () => {
    render(<App />);
    
    // –í–≤–æ–¥–∏–º API –∫–ª—é—á
    const apiKeyInput = screen.getByPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á...');
    const submitButton = screen.getByText('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É');
    
    fireEvent.change(apiKeyInput, { target: { value: 'AIzaSyTest-api-key-123456789' } });
    fireEvent.click(submitButton);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—è–≤–∏–ª–∏—Å—å —ç–ª–µ–º–µ–Ω—Ç—ã –∏–≥—Ä—ã
    await waitFor(() => {
      expect(screen.getByText('üîÑ –ù–æ–≤–∞—è –∏–≥—Ä–∞')).toBeInTheDocument();
      expect(screen.getByText('‚Ü∂ –û—Ç–º–µ–Ω–∏—Ç—å —Ö–æ–¥')).toBeInTheDocument();
      expect(screen.getByText('üîë –°–º–µ–Ω–∏—Ç—å –∫–ª—é—á')).toBeInTheDocument();
    });
  });

  it('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –∏–≥—Ä—ã', async () => {
    render(<App />);
    
    // –í–≤–æ–¥–∏–º API –∫–ª—é—á
    const apiKeyInput = screen.getByPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á...');
    const submitButton = screen.getByText('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É');
    
    fireEvent.change(apiKeyInput, { target: { value: 'AIzaSyTest-api-key-123456789' } });
    fireEvent.click(submitButton);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
    await waitFor(() => {
      expect(screen.getByText('–ë–µ–ª—ã–µ —Ö–æ–¥—è—Ç')).toBeInTheDocument();
    });
  });

  it('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø–∞–Ω–µ–ª—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∏–≥—Ä–µ', async () => {
    render(<App />);
    
    // –í–≤–æ–¥–∏–º API –∫–ª—é—á
    const apiKeyInput = screen.getByPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á...');
    fireEvent.change(apiKeyInput, { target: { value: 'AIzaSyTest-api-key-123456789' } });
    fireEvent.click(screen.getByText('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É'));
    
    await waitFor(() => {
      expect(screen.getByText('–°—Ç—Ä–∞—Ç–µ–≥–∏—è AI')).toBeInTheDocument();
      expect(screen.getByText('–ò—Å—Ç–æ—Ä–∏—è —Ö–æ–¥–æ–≤')).toBeInTheDocument();
      expect(screen.getByText('–ü–∞—Ä—Ç–∏—è –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∞—Å—å')).toBeInTheDocument();
    });
  });

  it('–¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ù–æ–≤–∞—è –∏–≥—Ä–∞"', async () => {
    render(<App />);
    
    // –í–≤–æ–¥–∏–º API –∫–ª—é—á
    const apiKeyInput = screen.getByPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á...');
    fireEvent.change(apiKeyInput, { target: { value: 'AIzaSyTest-api-key-123456789' } });
    fireEvent.click(screen.getByText('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É'));
    
    await waitFor(() => {
      const newGameButton = screen.getByText('üîÑ –ù–æ–≤–∞—è –∏–≥—Ä–∞');
      expect(newGameButton).toBeInTheDocument();
      
      // –ö–ª–∏–∫–∞–µ–º –∫–Ω–æ–ø–∫—É (–¥–æ–ª–∂–Ω–∞ —Å–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É)
      fireEvent.click(newGameButton);
      expect(screen.getByText('–ë–µ–ª—ã–µ —Ö–æ–¥—è—Ç')).toBeInTheDocument();
    });
  });

  it('–¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–º–µ–Ω–∏—Ç—å –∫–ª—é—á"', async () => {
    render(<App />);
    
    // –í–≤–æ–¥–∏–º API –∫–ª—é—á
    const apiKeyInput = screen.getByPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á...');
    fireEvent.change(apiKeyInput, { target: { value: 'AIzaSyTest-api-key-123456789' } });
    fireEvent.click(screen.getByText('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É'));
    
    await waitFor(() => {
      const changeKeyButton = screen.getByText('üîë –°–º–µ–Ω–∏—Ç—å –∫–ª—é—á');
      fireEvent.click(changeKeyButton);
    });
    
    // –î–æ–ª–∂–Ω–æ —Å–Ω–æ–≤–∞ –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    await waitFor(() => {
      expect(screen.getByText('API –∫–ª—é—á Gemini')).toBeInTheDocument();
    });
  });

  it('–¥–æ–ª–∂–µ–Ω –±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–û—Ç–º–µ–Ω–∏—Ç—å —Ö–æ–¥" –∫–æ–≥–¥–∞ –Ω–µ—Ç —Ö–æ–¥–æ–≤', async () => {
    render(<App />);
    
    // –í–≤–æ–¥–∏–º API –∫–ª—é—á
    const apiKeyInput = screen.getByPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á...');
    fireEvent.change(apiKeyInput, { target: { value: 'AIzaSyTest-api-key-123456789' } });
    fireEvent.click(screen.getByText('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É'));
    
    await waitFor(() => {
      const undoButton = screen.getByText('‚Ü∂ –û—Ç–º–µ–Ω–∏—Ç—å —Ö–æ–¥');
      expect(undoButton).toBeDisabled();
    });
  });

  it('–¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è –∏–≥—Ä–æ–∫–∞', async () => {
    render(<App />);
    
    // –í–≤–æ–¥–∏–º API –∫–ª—é—á
    const apiKeyInput = screen.getByPlaceholderText('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á...');
    fireEvent.change(apiKeyInput, { target: { value: 'AIzaSyTest-api-key-123456789' } });
    fireEvent.click(screen.getByText('–ù–∞—á–∞—Ç—å –∏–≥—Ä—É'));
    
    await waitFor(() => {
      expect(screen.getByText('üí° –ü–æ–¥—Å–∫–∞–∑–∫–∏')).toBeInTheDocument();
      expect(screen.getByText('‚Ä¢ –ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ —Ñ–∏–≥—É—Ä—É, –∑–∞—Ç–µ–º –Ω–∞ –∫–ª–µ—Ç–∫—É –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è')).toBeInTheDocument();
      expect(screen.getByText('‚Ä¢ –ò–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∏–≥—É—Ä—É –Ω–∞ –Ω–æ–≤–æ–µ –º–µ—Å—Ç–æ')).toBeInTheDocument();
    });
  });
}); 