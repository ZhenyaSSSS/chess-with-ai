import { useState, useEffect } from 'react'
import { Eye, EyeOff, Key, ExternalLink, AlertCircle, RefreshCw } from 'lucide-react'
import { gameService } from '../services/apiService'

function ApiKeyModal({ isOpen, onApiKeySubmit }) {
  const [apiKey, setApiKey] = useState('');
  const [showApiKey, setShowApiKey] = useState(false);
  const [isValidating, setIsValidating] = useState(false);
  const [error, setError] = useState('');
  const [selectedModel, setSelectedModel] = useState('gemini-2.5-pro-preview-05-06');
  const [availableModels, setAvailableModels] = useState([]);
  const [isLoadingModels, setIsLoadingModels] = useState(false);

  // –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏ (fallback –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å)
  const defaultModels = [
    {
      id: 'gemini-2.5-pro-preview-05-06',
      name: 'Gemini 2.5 Pro Preview 05-06',
      description: '–õ—É—á—à–∞—è –≤–µ—Ä—Å–∏—è 2.5 Pro (—Å—Ç–∞–±–∏–ª—å–Ω–∞—è)',
      available: true
    },
    {
      id: 'gemini-2.5-pro-preview-06-05',
      name: 'Gemini 2.5 Pro Preview 06-05',
      description: '–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è (–º–æ–≥—É—Ç –±—ã—Ç—å –ø—Ä–æ–±–ª–µ–º—ã)',
      available: true
    },
    {
      id: 'gemini-2.5-flash-preview-05-20',
      name: 'Gemini 2.5 Flash Preview',
      description: '–ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å Gemini 2.5',
      available: true
    },
    {
      id: 'gemini-1.5-pro',
      name: 'Gemini 1.5 Pro (Legacy)',
      description: '–£—Å—Ç–∞—Ä–µ–≤—à–∞—è, –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω–∞—è',
      available: true
    }
  ];

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏ –ø—Ä–∏ –≤–≤–æ–¥–µ API –∫–ª—é—á–∞
  const loadModels = async (key) => {
    if (!key || key.length < 20) return;
    
    setIsLoadingModels(true);
    try {
      const models = await gameService.getAvailableModels(key);
      if (models && models.length > 0) {
        setAvailableModels(models);
        console.log('–ó–∞–≥—Ä—É–∂–µ–Ω—ã –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏:', models);
      } else {
        setAvailableModels(defaultModels);
      }
    } catch (error) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª–∏, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ:', error);
      setAvailableModels(defaultModels);
    } finally {
      setIsLoadingModels(false);
    }
  };

  // –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –º–æ–¥–µ–ª–∏
  useEffect(() => {
    if (availableModels.length === 0) {
      setAvailableModels(defaultModels);
    }
  }, []);

  if (!isOpen) return null;

  const handleSubmit = async (e) => {
    e.preventDefault();
    
    if (!apiKey.trim()) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ API –∫–ª—é—á');
      return;
    }

    if (apiKey.length < 20) {
      setError('API –∫–ª—é—á —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞.');
      return;
    }

    setIsValidating(true);
    setError('');

    try {
      // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ Gemini API –∫–ª—é—á
      if (!apiKey.startsWith('AI') && !apiKey.includes('-')) {
        throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–∏ –µ–≥–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é.');
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–ª—é—á –∏ –º–æ–¥–µ–ª—å
      onApiKeySubmit(apiKey.trim(), selectedModel);
      
    } catch (error) {
      setError(error.message);
    } finally {
      setIsValidating(false);
    }
  };

  const handleInputChange = (e) => {
    const newKey = e.target.value;
    setApiKey(newKey);
    if (error) setError(''); // –û—á–∏—â–∞–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –≤–≤–æ–¥–µ
    
    // –ê–≤—Ç–æ–∑–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–µ–π –ø—Ä–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ–π –¥–ª–∏–Ω–µ –∫–ª—é—á–∞
    if (newKey.length >= 25) {
      loadModels(newKey);
    }
  };

  return (
    <div className="fixed inset-0 modal-backdrop flex items-center justify-center p-4 z-50">
      <div className="bg-white rounded-2xl shadow-2xl max-w-md w-full p-6 animate-slide-in">
        <div className="text-center mb-6">
          <div className="mx-auto w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mb-4">
            <Key className="h-8 w-8 text-blue-600" />
          </div>
          <h2 className="text-2xl font-bold text-gray-900 mb-2">
            API –∫–ª—é—á Gemini
          </h2>
          <p className="text-gray-600 text-sm">
            –í–≤–µ–¥–∏—Ç–µ –≤–∞—à API –∫–ª—é—á Google Gemini –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
          </p>
        </div>

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div className="bg-blue-50 rounded-lg p-4 mb-6">
          <h3 className="font-semibold text-blue-900 mb-2">–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á:</h3>
          <ol className="text-sm text-blue-800 space-y-1">
            <li>1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ Google AI Studio</li>
            <li>2. –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç Google</li>
            <li>3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π API –∫–ª—é—á</li>
            <li>4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á –∏ –≤—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞</li>
          </ol>
          <a
            href="https://makersuite.google.com/app/apikey"
            target="_blank"
            rel="noopener noreferrer"
            className="inline-flex items-center mt-3 text-blue-600 hover:text-blue-800 text-sm font-medium"
          >
            –ü–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á
            <ExternalLink className="h-4 w-4 ml-1" />
          </a>
                 </div>

         {/* –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ */}
         <div className="bg-gray-50 rounded-lg p-4 mb-6">
           <div className="flex items-center justify-between mb-3">
             <h3 className="font-semibold text-gray-900">üß† –í—ã–±–µ—Ä–∏—Ç–µ AI –º–æ–¥–µ–ª—å:</h3>
             {apiKey && apiKey.length >= 25 && (
               <button
                 onClick={() => loadModels(apiKey)}
                 disabled={isLoadingModels}
                 className="text-blue-600 hover:text-blue-800 disabled:opacity-50 flex items-center text-sm"
               >
                 <RefreshCw className={`h-4 w-4 mr-1 ${isLoadingModels ? 'animate-spin' : ''}`} />
                 –û–±–Ω–æ–≤–∏—Ç—å
               </button>
             )}
           </div>
           
           {isLoadingModels && (
             <div className="flex items-center justify-center py-4">
               <RefreshCw className="h-5 w-5 animate-spin text-blue-600 mr-2" />
               <span className="text-blue-600">–ó–∞–≥—Ä—É–∂–∞—é –∞–∫—Ç—É–∞–ª—å–Ω—ã–µ –º–æ–¥–µ–ª–∏...</span>
             </div>
           )}
           
           {/* –°–µ–ª–µ–∫—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏ */}
           <div className="mb-3">
             <select
               value={selectedModel}
               onChange={(e) => setSelectedModel(e.target.value)}
               className="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent bg-white"
             >
               {availableModels.map((model) => (
                 <option 
                   key={model.id} 
                   value={model.id}
                 >
                   {model.name} {!model.available ? '(–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ)' : ''} 
                   {model.available && model.version === '2.5' ? ' ‚ö° –ù–æ–≤–∞—è' : ''}
                 </option>
               ))}
             </select>
           </div>

           {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–æ–¥–µ–ª–∏ */}
           {selectedModel && (
             <div className="bg-white rounded-lg p-3 border border-gray-200">
               {(() => {
                 const selected = availableModels.find(m => m.id === selectedModel);
                 if (!selected) return null;
                 
                 return (
                   <div>
                     <div className="flex items-center justify-between mb-2">
                       <h4 className="font-medium text-gray-900">{selected.name}</h4>
                       <div className="flex gap-1">
                         {selected.available ? (
                           <span className="text-xs text-green-600 bg-green-50 px-2 py-1 rounded">
                             ‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞
                           </span>
                         ) : (
                           <span className="text-xs text-red-500 bg-red-50 px-2 py-1 rounded">
                             ‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω–∞
                           </span>
                         )}
                         {selected.version === '2.5' && (
                           <span className="text-xs text-blue-600 bg-blue-50 px-2 py-1 rounded">
                             ‚ö° v{selected.version}
                           </span>
                         )}
                       </div>
                     </div>
                     
                     <p className="text-sm text-gray-600 mb-2">{selected.description}</p>
                     
                     {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                     <div className="grid grid-cols-2 gap-2 text-xs text-gray-500">
                       <div>
                         <span className="font-medium">–í–≤–æ–¥:</span> {selected.inputTokenLimit || 'N/A'}
                       </div>
                       <div>
                         <span className="font-medium">–í—ã–≤–æ–¥:</span> {selected.outputTokenLimit || 'N/A'}
                       </div>
                     </div>
                     
                     {selected.error && (
                       <div className="mt-2 p-2 bg-red-50 border border-red-200 rounded text-xs text-red-600">
                         <strong>–û—à–∏–±–∫–∞:</strong> {selected.error}
                       </div>
                     )}
                     
                     {selected.capabilities && selected.capabilities.length > 0 && (
                       <div className="mt-2">
                         <span className="text-xs font-medium text-gray-500">–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</span>
                         <div className="flex flex-wrap gap-1 mt-1">
                           {selected.capabilities.map(cap => (
                             <span key={cap} className="text-xs bg-gray-100 px-2 py-1 rounded">
                               {cap}
                             </span>
                           ))}
                         </div>
                       </div>
                     )}
                   </div>
                 );
               })()}
             </div>
           )}
           
           {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥–µ–ª–µ–π */}
           {availableModels.length > 0 && (
             <div className="mt-3 text-xs text-gray-500 text-center">
               –î–æ—Å—Ç—É–ø–Ω–æ: {availableModels.filter(m => m.available).length} –∏–∑ {availableModels.length} –º–æ–¥–µ–ª–µ–π
             </div>
           )}
         </div>

         <form onSubmit={handleSubmit}>
          <div className="mb-4">
            <label className="block text-sm font-medium text-gray-700 mb-2">
              API –∫–ª—é—á
            </label>
            <div className="relative">
              <input
                type={showApiKey ? 'text' : 'password'}
                value={apiKey}
                onChange={handleInputChange}
                placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Gemini API –∫–ª—é—á..."
                className="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent pr-10"
                autoComplete="off"
                disabled={isValidating}
              />
              <button
                type="button"
                onClick={() => setShowApiKey(!showApiKey)}
                className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
              >
                {showApiKey ? <EyeOff className="h-5 w-5" /> : <Eye className="h-5 w-5" />}
              </button>
            </div>
          </div>

          {/* –û—à–∏–±–∫–∞ */}
          {error && (
            <div className="mb-4 p-3 bg-red-50 border border-red-200 rounded-lg flex items-start">
              <AlertCircle className="h-5 w-5 text-red-400 mt-0.5 mr-2 flex-shrink-0" />
              <p className="text-sm text-red-700">{error}</p>
            </div>
          )}

          <button
            type="submit"
            disabled={isValidating || !apiKey.trim()}
            className="w-full bg-blue-600 hover:bg-blue-700 disabled:bg-gray-400 disabled:cursor-not-allowed text-white font-semibold py-3 px-4 rounded-lg transition-colors flex items-center justify-center"
          >
            {isValidating ? (
              <>
                <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2"></div>
                –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á...
              </>
            ) : (
              '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É'
            )}
          </button>
        </form>

        {/* –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å */}
        <div className="mt-6 p-4 bg-gray-50 rounded-lg">
          <div className="flex items-start">
            <div className="text-2xl mr-3">üîí</div>
            <div>
              <h4 className="font-medium text-gray-900 mb-1">–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å</h4>
              <p className="text-sm text-gray-600">
                –í–∞—à API –∫–ª—é—á –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å Gemini –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

export default ApiKeyModal;